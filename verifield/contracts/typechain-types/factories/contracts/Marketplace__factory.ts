/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_dataNFTAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Purchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataNFTAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ae8380380610ae8833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b6080516109bc61012c6000396000818161013b015281816102150152818161035d015261047701526109bc6000f3fe60806040526004361061004a5760003560e01c80636aeea1691461004f578063bc31c1c11461007a578063d96a094a146100b7578063e7572230146100d3578063f7d9757714610110575b600080fd5b34801561005b57600080fd5b50610064610139565b60405161007191906105dc565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610632565b61015d565b6040516100ae919061066e565b60405180910390f35b6100d160048036038101906100cc9190610632565b610175565b005b3480156100df57600080fd5b506100fa60048036038101906100f59190610632565b610457565b604051610107919061066e565b60405180910390f35b34801561011c57600080fd5b5061013760048036038101906101329190610689565b610473565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528060005260406000206000915090505481565b6000806000838152602001908152602001600020549050600081116101cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c690610726565b60405180910390fd5b803414610211576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020890610792565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161026c919061066e565b602060405180830381865afa158015610289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ad91906107de565b905060008173ffffffffffffffffffffffffffffffffffffffff16346040516102d59061083c565b60006040518083038185875af1925050503d8060008114610312576040519150601f19603f3d011682016040523d82523d6000602084013e610317565b606091505b505090508061035b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610352906108c3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342842e0e8333876040518463ffffffff1660e01b81526004016103b8939291906108e3565b600060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050506000806000868152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16847ffd51b2c9f55c42d2b72ac683526519563be02fc0107f034ff430c05185ff1b6634604051610449919061066e565b60405180910390a350505050565b6000806000838152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000090503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016104e8919061066e565b602060405180830381865afa158015610505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052991906107de565b73ffffffffffffffffffffffffffffffffffffffff161461057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610966565b60405180910390fd5b8160008085815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c68261059b565b9050919050565b6105d6816105bb565b82525050565b60006020820190506105f160008301846105cd565b92915050565b600080fd5b6000819050919050565b61060f816105fc565b811461061a57600080fd5b50565b60008135905061062c81610606565b92915050565b600060208284031215610648576106476105f7565b5b60006106568482850161061d565b91505092915050565b610668816105fc565b82525050565b6000602082019050610683600083018461065f565b92915050565b600080604083850312156106a05761069f6105f7565b5b60006106ae8582860161061d565b92505060206106bf8582860161061d565b9150509250929050565b600082825260208201905092915050565b7f4d61726b6574706c6163653a20546f6b656e206e6f7420666f722073616c6500600082015250565b6000610710601f836106c9565b915061071b826106da565b602082019050919050565b6000602082019050818103600083015261073f81610703565b9050919050565b7f4d61726b6574706c6163653a20496e636f727265637420707269636500000000600082015250565b600061077c601c836106c9565b915061078782610746565b602082019050919050565b600060208201905081810360008301526107ab8161076f565b9050919050565b6107bb816105bb565b81146107c657600080fd5b50565b6000815190506107d8816107b2565b92915050565b6000602082840312156107f4576107f36105f7565b5b6000610802848285016107c9565b91505092915050565b600081905092915050565b50565b600061082660008361080b565b915061083182610816565b600082019050919050565b600061084782610819565b9150819050919050565b7f4d61726b6574706c6163653a205061796d656e74207472616e7366657220666160008201527f696c656400000000000000000000000000000000000000000000000000000000602082015250565b60006108ad6024836106c9565b91506108b882610851565b604082019050919050565b600060208201905081810360008301526108dc816108a0565b9050919050565b60006060820190506108f860008301866105cd565b61090560208301856105cd565b610912604083018461065f565b949350505050565b7f4d61726b6574706c6163653a204e6f7420746865206f776e6572000000000000600082015250565b6000610950601a836106c9565b915061095b8261091a565b602082019050919050565b6000602082019050818103600083015261097f81610943565b905091905056fea2646970667358221220c70268f4cad2d5b4f635b8e8fbcf896f5152d264da542e0f16ce5a70ccfea19c64736f6c63430008180033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _dataNFTAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_dataNFTAddress, overrides || {});
  }
  override deploy(
    _dataNFTAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_dataNFTAddress, overrides || {}) as Promise<
      Marketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Marketplace__factory {
    return super.connect(runner) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new Interface(_abi) as MarketplaceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Marketplace {
    return new Contract(address, _abi, runner) as unknown as Marketplace;
  }
}
